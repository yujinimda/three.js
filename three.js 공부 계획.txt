Three.js 학습 커리큘럼 - 물고기 큐브 프로젝트 

1. 마우스 휠로 큐브가 물고기처럼 헤엄치며 따라 내려오기
2. 마우스 움직임에 따라 큐브가 따라오기


1단계: 기초 다지기 (완료!) - 물체띄우기연습.html

 씬(Scene) 생성 
 카메라 설정
 렌더러 생성
 기본 Geometry와 Material
 메쉬 생성 및 배치
 화면 리사이즈 대응

 ==========================================================================

2단계: 애니메이션 기초
2-1. requestAnimationFrame 이해하기

 애니메이션 루프 개념 학습
 requestAnimationFrame vs setInterval 차이점
 기본 애니메이션 함수 만들기

2-2. 회전 애니메이션

 rotation.x, rotation.y, rotation.z 이해하기
 라디안과 각도 개념
 큐브 회전시키기
 여러 축 동시 회전

2-3. 이동 애니메이션

 position.x, position.y, position.z 이해하기
 직선 이동
 원형 이동 (Math.sin, Math.cos 활용)
 8자 이동 패턴

 ==========================================================================

3단계: 수학적 기초
3-1. 삼각함수 활용

 Math.sin으로 부드러운 상하 움직임
 Math.cos로 좌우 움직임
 주기와 진폭 조절하기
 위상(phase) 개념으로 다양한 패턴

3-2. 시간 기반 애니메이션

 Date.now() 또는 performance.now() 활용
 프레임 독립적 애니메이션
 속도 조절 방법

3-3. 벡터 기초

 THREE.Vector3 이해하기
 거리 계산 (distance)
 방향 계산 (normalize)
 보간(interpolation) 기초

 ==========================================================================

4단계: 마우스 인터랙션
4-1. 마우스 이벤트 기초

 mousemove 이벤트 리스너
 마우스 좌표 가져오기 (clientX, clientY)
 화면 좌표 → 3D 좌표 변환 개념

4-2. 마우스 따라오기 구현

 마우스 위치를 3D 공간으로 변환
 큐브가 마우스 위치로 즉시 이동
 부드러운 따라오기 (lerp 함수 활용)
 지연 효과로 자연스러운 움직임

4-3. 마우스 휠 이벤트

 wheel 이벤트 리스너
 deltaY 값 이해하기
 휠 방향에 따른 동작 구분

 ==========================================================================

5단계: 물고기 움직임 구현
5-1. 기본 물고기 움직임 패턴

 좌우 흔들림 (꼬리 흔들기)
 상하 파동 (지느러미 움직임)
 앞뒤 움직임 (추진력)

5-2. 조합된 움직임

 3개 축 동시 애니메이션
 서로 다른 주기로 조합
 자연스러운 물고기 헤엄 패턴

5-3. 휠 스크롤과 연동

 휠 내릴 때마다 Y축 이동
 이동하면서 물고기 움직임 유지
 스크롤 속도에 따른 헤엄 속도 조절

 ==========================================================================

6단계: 고급 효과
6-1. 부드러운 움직임

 easing 함수 (ease-in, ease-out)
 가속도와 감속도
 스프링 효과

6-2. 궤적 효과

 큐브가 지나간 자리에 흔적 남기기
 파티클 시스템 기초
 물방울 효과

6-3. 시각적 개선

 그림자 효과
 조명과 반사
 배경 그라데이션

 ==========================================================================

7단계: 최적화 및 마무리
7-1. 성능 최적화

 프레임 레이트 모니터링
 불필요한 연산 줄이기
 메모리 관리

7-2. 사용자 경험 개선

 반응형 디자인
 모바일 터치 지원
 키보드 단축키 추가


